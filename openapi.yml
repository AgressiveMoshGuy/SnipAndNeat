
openapi: 3.0.2
servers:
  - url: /v3
info:
  version: 1.0.0
  title: Pet store schema
tags:
  - name: pet
    description: Everything about your Pets
paths:
  # /pet:
  #   post:
  #     tags:
  #       - pet
  #     summary: Add a new pet to the store
  #     description: Add a new pet to the store
  #     operationId: addPet
  #     responses:
  #       '200':
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #     requestBody:
  #       description: Create a new pet in the store
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Pet'
  # '/pet/{petId}':
  #   get:
  #     tags:
  #       - pet
  #     summary: Find pet by ID
  #     description: Returns a single pet
  #     operationId: getPetById
  #     parameters:
  #       - name: petId
  #         in: path
  #         description: ID of pet to return
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #       '404':
  #         description: Pet not found
  #   post:
  #     tags:
  #       - pet
  #     summary: Updates a pet in the store
  #     description: ''
  #     operationId: updatePet
  #     parameters:
  #       - name: petId
  #         in: path
  #         description: ID of pet that needs to be updated
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #       - name: name
  #         in: query
  #         description: Name of pet that needs to be updated
  #         schema:
  #           type: string
  #       - name: status
  #         in: query
  #         description: Status of pet that needs to be updated
  #         schema:
  #           $ref: '#/components/schemas/PetStatus'
  #     responses:
  #       '200':
  #         description: successful operation
  #   delete:
  #     tags:
  #       - pet
  #     summary: Deletes a pet
  #     description: ''
  #     operationId: deletePet
  #     parameters:
  #       - name: petId
  #         in: path
  #         description: Pet id to delete
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     responses:
  #       '200':
  #         description: successful operation
  /viento/products:
    post:
      tags:
        - viento
      summary: get viento products
      description: get viento products
      operationId: getVientoProducts
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VientoProduct'
        '400':
          description: bad request

components:
  schemas:
    # PetStatus:
    #   type: string
    #   description: pet status in the store
    #   enum:
    #     - available
    #     - pending
    #     - sold
    # Pet:
    #   required:
    #     - name
    #   properties:
    #     id:
    #       type: integer
    #       format: int64
    #       example: 10
    #     name:
    #       type: string
    #       example: doggie
    #     photoUrls:
    #       type: array
    #       items:
    #         type: string
    #     status:
    #       $ref: '#/components/schemas/PetStatus'
    #   type: object
    VientoProduct:
      type: object  
      description: viento product
      properties:
        ProductID:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags:
            gorm: primaryKey
        OfferID:
          type: string
        IsFBOVisible:
          type: boolean
        Archived:
          type: boolean
        IsFBSVisible:
          type: boolean
        IsDiscounted:
          type: boolean
        Barcode:
          type: string
        Barcodes:
          type: array
          items:
            type: string
        Price:
          type: number
          format: float64
  # requestBodies:
  #   Pet:
  #     content:
  #       application/json:
  #         schema:
  #           $ref: '#/components/schemas/Pet'
  #     description: Pet object that needs to be added to the store
