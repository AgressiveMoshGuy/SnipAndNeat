// Code generated by ogen, DO NOT EDIT.

package vnt

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddPet implements addPet operation.
	//
	// Add a new pet to the store.
	//
	// POST /pet
	AddPet(ctx context.Context, req *AddPetReq) (*AddPetOK, error)
	// GetOzonItems implements getOzonItems operation.
	//
	// Get ozon items.
	//
	// POST /ozon/item
	GetOzonItems(ctx context.Context) (GetOzonItemsRes, error)
	// GetSumServicesByDay implements getSumServicesByDay operation.
	//
	// Get sum services by day.
	//
	// POST /ozon/sum/services
	GetSumServicesByDay(ctx context.Context, req *SumServicesByDayParams) (GetSumServicesByDayRes, error)
	// GetVientoListTransaction implements getVientoListTransaction operation.
	//
	// Get viento list transaction.
	//
	// POST /ozon/list_transaction
	GetVientoListTransaction(ctx context.Context, req OptGetSumProficiencyParams) (GetVientoListTransactionRes, error)
	// GetVientoOperations implements getVientoOperations operation.
	//
	// Get viento operations.
	//
	// POST /ozon/operation
	GetVientoOperations(ctx context.Context) (GetVientoOperationsRes, error)
	// GetVientoPosting implements getVientoPosting operation.
	//
	// Get viento posting.
	//
	// POST /ozon/posting
	GetVientoPosting(ctx context.Context) (GetVientoPostingRes, error)
	// GetVientoProducts implements getVientoProducts operation.
	//
	// Get viento products.
	//
	// POST /viento/products
	GetVientoProducts(ctx context.Context) (GetVientoProductsRes, error)
	// GetVientoServices implements getVientoServices operation.
	//
	// Get viento services.
	//
	// POST /ozon/service
	GetVientoServices(ctx context.Context) (GetVientoServicesRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
