// Code generated by ogen, DO NOT EDIT.

package oas

// GetVientoProductsBadRequest is response for GetVientoProducts operation.
type GetVientoProductsBadRequest struct{}

func (*GetVientoProductsBadRequest) getVientoProductsRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Viento product.
// Ref: #/components/schemas/VientoProduct
type VientoProduct struct {
	ProductID    OptInt64   `json:"ProductID" gorm:"primaryKey"`
	OfferID      OptString  `json:"OfferID"`
	IsFBOVisible OptBool    `json:"IsFBOVisible"`
	Archived     OptBool    `json:"Archived"`
	IsFBSVisible OptBool    `json:"IsFBSVisible"`
	IsDiscounted OptBool    `json:"IsDiscounted"`
	Barcode      OptString  `json:"Barcode"`
	Barcodes     []string   `json:"Barcodes"`
	Price        OptFloat64 `json:"Price"`
}

// GetProductID returns the value of ProductID.
func (s *VientoProduct) GetProductID() OptInt64 {
	return s.ProductID
}

// GetOfferID returns the value of OfferID.
func (s *VientoProduct) GetOfferID() OptString {
	return s.OfferID
}

// GetIsFBOVisible returns the value of IsFBOVisible.
func (s *VientoProduct) GetIsFBOVisible() OptBool {
	return s.IsFBOVisible
}

// GetArchived returns the value of Archived.
func (s *VientoProduct) GetArchived() OptBool {
	return s.Archived
}

// GetIsFBSVisible returns the value of IsFBSVisible.
func (s *VientoProduct) GetIsFBSVisible() OptBool {
	return s.IsFBSVisible
}

// GetIsDiscounted returns the value of IsDiscounted.
func (s *VientoProduct) GetIsDiscounted() OptBool {
	return s.IsDiscounted
}

// GetBarcode returns the value of Barcode.
func (s *VientoProduct) GetBarcode() OptString {
	return s.Barcode
}

// GetBarcodes returns the value of Barcodes.
func (s *VientoProduct) GetBarcodes() []string {
	return s.Barcodes
}

// GetPrice returns the value of Price.
func (s *VientoProduct) GetPrice() OptFloat64 {
	return s.Price
}

// SetProductID sets the value of ProductID.
func (s *VientoProduct) SetProductID(val OptInt64) {
	s.ProductID = val
}

// SetOfferID sets the value of OfferID.
func (s *VientoProduct) SetOfferID(val OptString) {
	s.OfferID = val
}

// SetIsFBOVisible sets the value of IsFBOVisible.
func (s *VientoProduct) SetIsFBOVisible(val OptBool) {
	s.IsFBOVisible = val
}

// SetArchived sets the value of Archived.
func (s *VientoProduct) SetArchived(val OptBool) {
	s.Archived = val
}

// SetIsFBSVisible sets the value of IsFBSVisible.
func (s *VientoProduct) SetIsFBSVisible(val OptBool) {
	s.IsFBSVisible = val
}

// SetIsDiscounted sets the value of IsDiscounted.
func (s *VientoProduct) SetIsDiscounted(val OptBool) {
	s.IsDiscounted = val
}

// SetBarcode sets the value of Barcode.
func (s *VientoProduct) SetBarcode(val OptString) {
	s.Barcode = val
}

// SetBarcodes sets the value of Barcodes.
func (s *VientoProduct) SetBarcodes(val []string) {
	s.Barcodes = val
}

// SetPrice sets the value of Price.
func (s *VientoProduct) SetPrice(val OptFloat64) {
	s.Price = val
}

func (*VientoProduct) getVientoProductsRes() {}
